{"map":"{\"version\":3,\"sources\":[\"/Users/hivelabco.ltd./hello-react/src/Movie.js\",\"/Users/hivelabco.ltd./hello-react/src/App.js\",\"/Users/hivelabco.ltd./hello-react/src/serviceWorker.js\",\"/Users/hivelabco.ltd./hello-react/src/index.js\"],\"names\":[\"MoviePoster\",\"_ref2\",\"poster\",\"alt\",\"react_default\",\"a\",\"createElement\",\"src\",\"title\",\"className\",\"MovieGenre\",\"_ref3\",\"genre\",\"Movie\",\"_ref\",\"genres\",\"synopsis\",\"map\",\"index\",\"key\",\"App\",\"state\",\"_renderMovies\",\"_this\",\"movies\",\"movie\",\"console\",\"log\",\"src_Movie\",\"large_cover_image\",\"id\",\"_getMovies\",\"_callee\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"_callApi\",\"sent\",\"setState\",\"stop\",\"this\",\"fetch\",\"then\",\"potato\",\"json\",\"data\",\"catch\",\"err\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"qTAsBA,SAASA,EAATC,GAAmC,IAAbC,EAAaD,EAAbC,OAAQC,EAAKF,EAALE,IAC5B,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,IAAKL,EAAQC,IAAKA,EAAKK,MAAOL,EAAKM,UAAU,kBAGtD,SAASC,EAATC,GAA4B,IAAPC,EAAOD,EAAPC,MACnB,OACER,EAAAC,EAAAC,cAAA,OAAA,CAAMG,UAAU,gBAAgBG,GAgBrBC,IAAAA,EAzCf,SAAAC,GAAiD,IAAjCN,EAAiCM,EAAjCN,MAAON,EAA0BY,EAA1BZ,OAAQa,EAAkBD,EAAlBC,OAAQC,EAAUF,EAAVE,SACrC,OACEZ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,kBACbL,EAAAC,EAAAC,cAACN,EAAD,CAAaE,OAAQA,EAAQC,IAAKK,KAEpCJ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,kBACbL,EAAAC,EAAAC,cAAA,KAAA,KAAKE,GACLJ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,gBACZM,EAAOE,IAAI,SAACL,EAAMM,GAAP,OAAiBd,EAAAC,EAAAC,cAACI,EAAD,CAAYE,MAAOA,EAAOO,IAAKD,OAE9Dd,EAAAC,EAAAC,cAAA,IAAA,CAAGG,UAAU,mBACVO,MC+CII,6MA9CbC,MAAQ,KAQRC,cAAgB,WAWZ,OAVaC,EAAKF,MAAMG,OAAOP,IAAI,SAACQ,EAAOP,GAEzC,OADAQ,QAAQC,IAAIF,GACLrB,EAAAC,EAAAC,cAACsB,EAAD,CACLpB,MAAOiB,EAAMjB,MACbN,OAAQuB,EAAMI,kBACdV,IAAKM,EAAMK,GACXf,OAAQU,EAAMV,OACdC,SAAUS,EAAMT,gBAMxBe,gCAAa,SAAAC,IAAA,IAAAR,EAAA,OAAAS,EAAA5B,EAAA6B,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACUd,EAAKe,WADf,KAAA,EACLd,EADKW,EAAAI,KAEXhB,EAAKiB,SAAS,CACZhB,OAAAA,IAHS,KAAA,EAAA,IAAA,MAAA,OAAAW,EAAAM,SAAAT,EAAAU,WAObJ,SAAW,WACT,OAAOK,MAAM,yDACZC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKvB,SACvBwB,MAAM,SAAAC,GAAG,OAAIvB,QAAQC,IAAIsB,yFA5B1BP,KAAKX,8CA+BE,IACAP,EAAUkB,KAAKrB,MAAfG,OACP,OACEpB,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAWiC,KAAKrB,MAAMG,OAAS,MAAQ,gBACvCA,EAASkB,KAAKpB,gBAAkB,kBA1CzB4B,EAAAA,WCHEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,KAAK,SAAAoB,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, {} from 'react';\\nimport PropTypes from 'prop-types';\\nimport './Movie.css';\\n\\nfunction Movie({title, poster, genres, synopsis}){\\n  return (\\n    <div className=\\\"Movie\\\">\\n      <div className=\\\"Movie__Columns\\\">\\n        <MoviePoster poster={poster} alt={title} />\\n      </div>\\n      <div className=\\\"Movie__Columns\\\">\\n        <h1>{title}</h1>\\n        <div className=\\\"Movie__Genre\\\">\\n          {genres.map((genre,index) => <MovieGenre genre={genre} key={index} />)}\\n        </div>\\n        <p className=\\\"Movie__Synopsis\\\">\\n          {synopsis}\\n        </p>\\n      </div>\\n    </div>\\n  )\\n}\\nfunction MoviePoster({poster, alt}){\\n  return (\\n    <img src={poster} alt={alt} title={alt} className=\\\"Movie__Poster\\\" />\\n  )\\n}\\nfunction MovieGenre({genre}){\\n  return (\\n    <span className=\\\"Movie__Genre\\\">{genre}</span>\\n  )\\n}\\n\\nMovie.propTypes = {\\n    title: PropTypes.string.isRequired,\\n    poster: PropTypes.string.isRequired,\\n    genres: PropTypes.array.isRequired,\\n    synopsis: PropTypes.string.isRequired\\n}\\n\\nMoviePoster.propTypes = {\\n  poster: PropTypes.string.isRequired\\n}\\n  \\n  \\nexport default Movie;\\n\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport Movie from './Movie';\\n\\n// const movieTitle = [\\n//   'Oldboy',\\n//   'Starwars',\\n//   'Avengers'\\n// ]\\n// const movieImage = [\\n//   'https://m.media-amazon.com/images/M/MV5BOTAzODEzNDAzMl5BMl5BanBnXkFtZTgwMDU1MTgzNzE@._V1_UX182_CR0,0,182,268_AL_.jpg',\\n//   'http://moonhak.co.kr/home/wp-content/uploads/bookcover/%EC%8A%A4%ED%83%80%EC%9B%8C%EC%A6%88-%EC%94%A8%EB%84%A4%EC%95%84%ED%8A%B84_%ED%91%9C1_web.jpg',\\n//   'https://www.google.com/url?sa=i&source=images&cd=&ved=2ahUKEwjny6SMzfTfAhUDi7wKHSgjB2QQjRx6BAgBEAU&url=https%3A%2F%2Fko.wikipedia.org%2Fwiki%2F%25EC%2596%25B4%25EB%25B2%25A4%25EC%25A0%25B8%25EC%258A%25A4%3A_%25EC%259D%25B8%25ED%2594%25BC%25EB%258B%2588%25ED%258B%25B0_%25EC%259B%258C&psig=AOvVaw0c81PU9Tj6f2PrtmBCVqWC&ust=1547805226648490'\\n// ]\\n\\nclass App extends Component {\\n\\n  state = {\\n    //update: 'Update!!'\\n  }\\n\\n  componentDidMount(){\\n    this._getMovies();\\n  }\\n\\n  _renderMovies = () => {\\n    const movies = this.state.movies.map((movie, index) =>{\\n        console.log(movie)\\n        return <Movie \\n          title={movie.title} \\n          poster={movie.large_cover_image} \\n          key={movie.id} \\n          genres={movie.genres} \\n          synopsis={movie.synopsis}\\n        />\\n      })\\n      return movies\\n  }\\n\\n  _getMovies = async () => {\\n    const movies = await this._callApi()\\n    this.setState({\\n      movies\\n    })\\n  }\\n\\n  _callApi = () => {\\n    return fetch('https://yts.am/api/v2/list_movies.json?sort_by=rating')\\n    .then(potato => potato.json())\\n    .then(json => json.data.movies)\\n    .catch(err => console.log(err))\\n  }\\n\\n  render() {\\n    const {movies} = this.state;\\n    return (\\n      <div className={this.state.movies ? \\\"App\\\" : \\\"App--loading\\\"}>\\n          {movies ? this._renderMovies() : 'Loading'}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(24)},16:function(e,t,n){},20:function(e,t,n){},22:function(e,t,n){},24:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(3),s=n.n(o),i=(n(16),n(1)),c=n.n(i),l=n(4),u=n(5),m=n(6),v=n(8),p=n(7),f=n(9);n(20),n(22);function d(e){var t=e.poster,n=e.alt;return r.a.createElement(\"img\",{src:t,alt:n,title:n,className:\"Movie__Poster\"})}function h(e){var t=e.genre;return r.a.createElement(\"span\",{className:\"Movie__Genre\"},t)}var _=function(e){var t=e.title,n=e.poster,a=e.genres,o=e.synopsis;return r.a.createElement(\"div\",{className:\"Movie\"},r.a.createElement(\"div\",{className:\"Movie__Columns\"},r.a.createElement(d,{poster:n,alt:t})),r.a.createElement(\"div\",{className:\"Movie__Columns\"},r.a.createElement(\"h1\",null,t),r.a.createElement(\"div\",{className:\"Movie__Genre\"},a.map(function(e,t){return r.a.createElement(h,{genre:e,key:t})})),r.a.createElement(\"p\",{className:\"Movie__Synopsis\"},o)))},g=function(e){function t(){var e,n;Object(u.a)(this,t);for(var a=arguments.length,o=new Array(a),s=0;s<a;s++)o[s]=arguments[s];return(n=Object(v.a)(this,(e=Object(p.a)(t)).call.apply(e,[this].concat(o)))).state={},n._renderMovies=function(){return n.state.movies.map(function(e,t){return console.log(e),r.a.createElement(_,{title:e.title,poster:e.large_cover_image,key:e.id,genres:e.genres,synopsis:e.synopsis})})},n._getMovies=Object(l.a)(c.a.mark(function e(){var t;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n._callApi();case 2:t=e.sent,n.setState({movies:t});case 4:case\"end\":return e.stop()}},e,this)})),n._callApi=function(){return fetch(\"https://yts.am/api/v2/list_movies.json?sort_by=rating\").then(function(e){return e.json()}).then(function(e){return e.data.movies}).catch(function(e){return console.log(e)})},n}return Object(f.a)(t,e),Object(m.a)(t,[{key:\"componentDidMount\",value:function(){this._getMovies()}},{key:\"render\",value:function(){var e=this.state.movies;return r.a.createElement(\"div\",{className:this.state.movies?\"App\":\"App--loading\"},e?this._renderMovies():\"Loading\")}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,2,1]]]);","extractedComments":[]}